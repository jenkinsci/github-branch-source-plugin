package org.jenkinsci.plugins.github_branch_source.app_credentials;

import edu.umd.cs.findbugs.annotations.CheckForNull;
import hudson.model.AbstractDescribableImpl;
import hudson.model.Descriptor;
import java.io.Serializable;
import org.jenkinsci.plugins.github_branch_source.GitHubAppCredentials;
import org.jenkinsci.plugins.github_branch_source.GitHubAppUsageContext;

/**
 * Controls the repositories available to installation access tokens generated by {@link
 * GitHubAppCredentials}.
 */
public abstract class RepositoryAccessStrategy extends AbstractDescribableImpl<RepositoryAccessStrategy>
        implements Serializable {

    /**
     * Get the {@link AccessibleRepositories} to use when generating installation access tokens for
     * the inferred contextual owner and repository.
     *
     * <p>Called when the credential is used in a context where an owner and repository can be
     * inferred.
     *
     * @return {@code null} if the accessible repositories are unknown, or if no repositories are
     *     accessible in the specified context
     */
    public abstract @CheckForNull AccessibleRepositories forContext(GitHubAppUsageContext context);

    public static class RepositoryAccessStrategyDescriptor extends Descriptor<RepositoryAccessStrategy> {}
}
